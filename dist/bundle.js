!function(e){var t={};function n(r){if(t[r])return t[r].exports;var o=t[r]={i:r,l:!1,exports:{}};return e[r].call(o.exports,o,o.exports,n),o.l=!0,o.exports}n.m=e,n.c=t,n.d=function(e,t,r){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:r})},n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var r=Object.create(null);if(n.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var o in e)n.d(r,o,function(t){return e[t]}.bind(null,o));return r},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="",n(n.s=0)}([function(e,t,n){"use strict";function r(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}n.r(t);var o=function(){function e(){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e)}return function(e,t,n){t&&r(e.prototype,t),n&&r(e,n)}(e,null,[{key:"httpGetAllSources",value:function(){return fetch(this.URL_ALL_SOURCES,this.requestOptions).then(function(e){return e.json()})}},{key:"httpGetArticlesSource",value:function(e,t){var n="".concat(this.URL_SOURCE,"/?sources=").concat(e,"&pageSize=").concat(t);return fetch(n,this.requestOptions).then(function(e){return e.json()})}},{key:"API_KEY",get:function(){return"44e9b020293440f680fab34b192b8dd0"}},{key:"URL_ALL_SOURCES",get:function(){return"https://newsapi.org/v1/sources"}},{key:"URL_SOURCE",get:function(){return"https://newsapi.org/v2/everything"}},{key:"requestOptions",get:function(){return{method:"GET",headers:{"X-Api-Key":this.API_KEY}}}}]),e}();function c(e){var t=e.tagName,n=e.innerText,r=e.innerHTML,o=e.className,c=e.attrs,i=document.createElement(t);return o&&i.classList.add(o),n&&(i.innerText=n),r&&(i.innerHTML=r),c&&Object.keys(c).forEach(function(e){i.setAttribute(e,c[e])}),i}function i(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var u=function(){function e(t){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.nodeSourceContent=document.querySelector(t),this.articlesContainer=null}return function(e,t,n){t&&i(e.prototype,t),n&&i(e,n)}(e,[{key:"createArticles",value:function(){var e=new DocumentFragment,t=c({tagName:"div",className:"source-content__articles"});return this.articlesContainer.forEach(function(e){var n=new Date(e.publishedAt).toLocaleString(),r=c({tagName:"article",className:"source-article",innerHTML:'\n          <img class="source-article__img" src="'.concat(e.urlToImage,'" alt="Image news" width="180" height="140">\n          <h3 class="source-article__title">').concat(e.title,'</h3>\n          <p class="source-article__description">').concat(e.description,'</p>\n          <span class="source-article__date">').concat(n,'</span>\n          <a href="').concat(e.url,'" target="_blank" class="source-article__link">See more</a>')});t.appendChild(r)}),e.appendChild(t),e}},{key:"redirectArticles",value:function(e,t){var n=this;this.nodeSourceContent.querySelector(".source-content__articles").innerHTML="Please wait...",o.httpGetArticlesSource(e,t).then(function(e){var t=e.articles;n.articles=t,n.viewNameSourceContent(),n.viewArticles()})}},{key:"viewArticles",value:function(){var e=this.nodeSourceContent.querySelector(".source-content__articles"),t=this.createArticles();e.replaceWith(t)}},{key:"viewNameSourceContent",value:function(){this.nodeSourceContent.querySelector(".source-content__author").innerText=this.articlesContainer[0].source.name}},{key:"articles",set:function(e){this.articlesContainer=e}}]),e}();function a(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var s=function(){function e(t){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.nodeFilterSources=document.querySelector(t),this.countNews=this.countNews,this.nodeFilterSources.querySelector(".filter-sources__range").onchange=function(e){this.countNews=e.target.value;var t=new u(".source-content"),n=new h(".all-sources").idCurrentSource;t.redirectArticles(n,this.countNews)}.bind(this)}return function(e,t,n){t&&a(e.prototype,t),n&&a(e,n)}(e,[{key:"countNews",set:function(e){this.nodeFilterSources.querySelector(".filter-sources__value").innerText=e},get:function(){var e=this.nodeFilterSources.querySelector(".filter-sources__range").value;return Number(e)}}]),e}();function l(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function f(e,t,n){return t&&l(e.prototype,t),n&&l(e,n),e}var h=function(){function e(t){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.nodeSources=document.querySelector(t),this.sourcesContainer=null,this.curentNode=null,document.querySelector(t).onclick=function(e){var t=e.target;if("LI"===t.tagName){var n=t.getAttribute("data-id-source"),r=new s(".filter-sources").countNews,o=new u(".source-content");this.clickCurentNode=t,o.redirectArticles(n,r)}}.bind(this)}return f(e,null,[{key:"NAME_CLASS_CURENT_NODE",get:function(){return"all-sources__curent-item"}},{key:"DATA_ID_SOURCE",get:function(){return"data-id-source"}}]),f(e,[{key:"createSources",value:function(){var t=new DocumentFragment;return this.sourcesContainer.forEach(function(n){var r=c({tagName:"li",innerText:n.name,className:"all-sources__item",attrs:function(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}({},e.DATA_ID_SOURCE,n.id)});t.appendChild(r)}),t}},{key:"viewSources",value:function(){var e=this.createSources();this.nodeSources.appendChild(e)}},{key:"sources",set:function(e){this.sourcesContainer=e}},{key:"clickCurentNode",set:function(t){this.curentNode&&this.curentNode.classList.remove(e.NAME_CLASS_CURENT_NODE),this.curentNode=t,this.curentNode.classList.add(e.NAME_CLASS_CURENT_NODE)}},{key:"idCurrentSource",get:function(){return this.nodeSources.querySelector(".".concat(e.NAME_CLASS_CURENT_NODE)).getAttribute(e.DATA_ID_SOURCE)}}]),e}();o.httpGetAllSources().then(function(e){var t=e.sources,n=new h(".all-sources__list"),r=new u(".source-content"),o=new s(".filter-sources").countNews;n.sources=t,n.viewSources(),n.clickCurentNode=n.nodeSources.firstElementChild,r.redirectArticles(t[0].id,o)})}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,